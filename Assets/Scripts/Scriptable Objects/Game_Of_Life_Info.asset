%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 1346bb112278c6447919a3f2e108c0d9, type: 3}
  m_Name: Game_Of_Life_Info
  m_EditorClassIdentifier: 
  Lines:
  - Welcome to this simulation of Conway's Game Of Life, a cellular automaton created
    by mathematician John Conway in 1970. It consists of an infinite grid of cells,
    where each cell can be either "alive" or "dead". The game evolves in discrete
    steps or generations, and the future state of each cell is determined by its
    current state and the number of living neighbors.
  - 'The rules governing the game are:


    - SURVIVAL: A live cell with 2 or 3
    live neighbors remains alive in the next step.

    - UNDERPOPULATION: A live
    cell with fewer than 2 live neighbors dies.

    - OVERPOPULATION: A live cell
    with more than 3 live neighbors dies.

    - BIRTH: A dead cell with exactly
    3 live neighbors becomes a live cell.'
  - The game starts with an initial configuration of cells, and as the rules are
    applied iteratively, complex patterns and behaviors can emerge. Despite the simplicity
    of the rules, the Game of Life can exhibit highly intricate dynamics, including
    stable structures, oscillations, and chaotic patterns.
  - In this simulation, the grid is modeled as a seamless, toroidal matrix, where
    the edges wrap around on themselves. Cells at the boundaries are connected to
    the opposite edges, creating the effect of a continuous surface akin to a torus.
    This means that cells on the far-right interact with those on the far-left, and
    those at the top are neighbors with those at the bottom, forming an unbroken,
    cyclical environment for life to evolve.
